// Single side border-radius
$enable-rounded: false;
$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px
);

@mixin border-radius($radius: $border-radius) {
  @if $enable-rounded {
    border-radius: $radius;
  }
}
@mixin border-top-radius($radius) {
  @if $enable-rounded {
    border-top-left-radius: $radius;
    border-top-right-radius: $radius;
  }
}
@mixin border-right-radius($radius) {
  @if $enable-rounded {
    border-top-right-radius: $radius;
    border-bottom-right-radius: $radius;
  }
}
@mixin border-bottom-radius($radius) {
  @if $enable-rounded {
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
  }
}
@mixin border-left-radius($radius) {
  @if $enable-rounded {
    border-top-left-radius: $radius;
    border-bottom-left-radius: $radius;
  }
}
@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
  $n: index($breakpoint-names, $name);
  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}
@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}
@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $next: breakpoint-next($name, $breakpoints);
  @return if($next, breakpoint-min($next, $breakpoints) - 1px, null);
}
@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
  @return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");
}
@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}
@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($lower, $breakpoints);
  $max: breakpoint-max($upper, $breakpoints);
  @media (min-width: $min) and (max-width: $max) {
    @content;
  }
}
@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  $max: breakpoint-max($name, $breakpoints);
  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include media-breakpoint-up($name)
  } @else if $min == null {
    @include media-breakpoint-down($name)
  }
}
@mixin button-outline-variant($color, $color-hover: #fff) {
  color: $color !important;
  background-color: transparent !important;
  background-image: none !important;
  border-color: $color !important;
  transition: box-shadow .4s cubic-bezier(.25,.8,.25,1), background-color .4s cubic-bezier(.25,.8,.25,1), color .4s cubic-bezier(.25,.8,.25,1) !important;
  &:hover {
    color: $color-hover !important;
    background-color: $color !important;
    border-color: $color !important;
  }
  &:focus,
  &.focus {
    box-shadow: 0 0 0 3px rgba($color, .5);
  }
  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }
  &:active,
  &.active,
  .show > &.dropdown-toggle {
    color: $color-hover;
    background-color: $color;
    border-color: $color;
  }
}

body { padding-top: 60px; }
// Superhero 3.3.5
// Bootswatch
// -----------------------------------------------------
//@import url("//fonts.googleapis.com/css?family=Lato:300,400,700");
// Navbar =====================================================================
.navbar {
  @include box-shadow(none);
  border: none;
  font-size: 12px;
}
.navbar-default {
  .badge {
    background-color: #fff;
    color: $navbar-default-bg;
  }
}
.navbar-inverse {
  .badge {
    background-color: #fff;
    color: $navbar-inverse-bg;
  }
}
// Buttons ====================================================================
.btn {
  font-weight: 300;
  transition: box-shadow .4s cubic-bezier(.25,.8,.25,1), background-color .4s cubic-bezier(.25,.8,.25,1), color .4s cubic-bezier(.25,.8,.25,1) !important;
  cursor: pointer;
  outline: none;
  letter-spacing: 0.01em;
  &:focus, &:hover, &:active {
    text-decoration: none;
    outline: none;
    box-shadow: none;
  }
  &[class*="btn-outline-"] {
    box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);
    &:focus, &:hover, &:active {
      box-shadow: 0 4px 8px 0 rgba(0,0,0,.4);
    }
  }
}
.btn-default {
  &:hover {
    background-color: darken($btn-default-bg, 3%);
  }
}
.btn-sm,
.btn-xs {
  font-size: 12px;
}
// Typography =================================================================
body {
  font-weight: 400;
}
.text-primary,
.text-primary:hover {
  color: $brand-primary;
}
.text-success,
.text-success:hover {
  color: $brand-success;
}
.text-danger,
.text-danger:hover {
  color: $brand-danger;
}
.text-warning,
.text-warning:hover {
  color: $brand-warning;
}
.text-info,
.text-info:hover {
  color: $brand-info;
}
.page-header {
  border-bottom-color: $table-border-color;
}
.dropdown-menu {
  border: none;
  margin: 0;
  @include box-shadow(none);
  > li > a {
    font-size: 12px;
    font-weight: 300;
  }
}
.btn-group.open .dropdown-toggle {
  @include box-shadow(none);
}
.dropdown-header {
  font-size: 12px;
}
// Tables =====================================================================
table,
.table {
  font-size: 12px;
  a:not(.btn) {
    color: #fff;
    text-decoration: underline;
  }
  .dropdown-menu a {
    text-decoration: none;
  }
  .text-muted {
    color: $text-muted;
  }
  > thead > tr > th,
  > tbody > tr > th,
  > tfoot > tr > th,
  > thead > tr > td,
  > tbody > tr > td,
  > tfoot > tr > td {
    border-color: transparent;
  }
 }
// Forms ======================================================================
input,
textarea {
  color: $input-color;
}
label,
.radio label,
.checkbox label,
.help-block {
  font-size: 12px;
  font-weight: 300;
}
.input-addon,
.input-group-addon {
  color: $text-color;
}
.has-warning {
  .help-block,
  .control-label,
  .radio,
  .checkbox,
  .radio-inline,
  .checkbox-inline,
  &.radio label,
  &.checkbox label,
  &.radio-inline label,
  &.checkbox-inline label,
  .form-control-feedback {
    color: $brand-warning;
  }
  .input-group-addon {
    border: none;
  }
}
.has-error {
  .help-block,
  .control-label,
  .radio,
  .checkbox,
  .radio-inline,
  .checkbox-inline,
  &.radio label,
  &.checkbox label,
  &.radio-inline label,
  &.checkbox-inline label,
  .form-control-feedback {
    color: $brand-danger;
  }
  .input-group-addon {
    border: none;
  }
}
.has-success {
  .help-block,
  .control-label,
  .radio,
  .checkbox,
  .radio-inline,
  .checkbox-inline,
  &.radio label,
  &.checkbox label,
  &.radio-inline label,
  &.checkbox-inline label,
  .form-control-feedback {
    color: $brand-success;
  }
  .input-group-addon {
    border: none;
  }
}
.form-control:focus {
  @include box-shadow(none);
}
.has-warning,
.has-error,
.has-success {
  .form-control:focus {
    @include box-shadow(none);
  }
}
.form-inline {
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  label {
    display: flex;
  	align-items: center;
  	justify-content: center;
  	margin-bottom: 0;
  }
  .form-control-file {
    padding-top: .5rem;
  	padding-bottom: .5rem;
  	margin-bottom: 0;
  	line-height: 1.25;
  	border: solid transparent;
  	border-width: 1px 0;
  }
}
.form-inputs {
  display: flex;
  flex: 0 0 auto;
  flex-flow: row wrap;
  align-items: center;
  margin-bottom: 0;
}
.form-control-file {
  display: inline-block;;
}
// Navs =======================================================================
.nav {
  .open > a,
  .open > a:hover,
  .open > a:focus {
    border-color: transparent;
  }
}
.nav-tabs {
  > li > a {
    color: $text-color;
  }
}
.nav-pills {
  > li > a {
    color: $text-color;
  }
}
.pager {
  a {
    color: $text-color;
  }
}
// Indicators =================================================================
.label {
  font-weight: 300;
}
.alert {
  color: #fff;
  a,
  .alert-link {
    color: #fff;
  }
}
.close {
  opacity: 0.4;
  &:hover,
  &:focus {
    opacity: 1;
  }
}
// Progress bars ==============================================================
// Containers =================================================================
.well {
  @include box-shadow(none);
}
a.list-group-item {
  &.active,
  &.active:hover,
  &.active:focus {
    border: none;
  }
}
a.list-group-item-success {
  &.active {
    background-color: $state-success-bg;
  }
  &.active:hover,
  &.active:focus {
    background-color: darken($state-success-bg, 5%);
  }
}
a.list-group-item-warning {
  &.active {
    background-color: $state-warning-bg;
  }
  &.active:hover,
  &.active:focus {
    background-color: darken($state-warning-bg, 5%);
  }
}
a.list-group-item-danger {
  &.active {
    background-color: $state-danger-bg;
  }
  &.active:hover,
  &.active:focus {
    background-color: darken($state-danger-bg, 5%);
  }
}
.panel {
  border: none;
}
.panel-default > .panel-heading {
  background-color: $table-bg-hover;
  color: $text-color;
}
.thumbnail {
  background-color: $well-bg;
  border: none;
}
.modal {
  padding: 0;
}
.modal-header,
.modal-footer {
  background-color: $table-bg-hover;
  border: none;
  border-radius: 0;
}
.popover-title {
  border: none;
}

// Typo
h4, .h4, h5, .h5, h6, .h6 {
  margin-top: 0;
  margin-bottom: 0;
}

.md-panel-wrapper {
  height: 100%;
	left: 0;
	position: absolute;
	top: 0;
	width: 100%;
  pointer-events: none;
	z-index: 100;
}
.md-tooltip {
  margin-top: -14px;
	z-index: 800;
  pointer-events: none;
	border-radius: 4px;
	overflow: hidden;
	font-weight: 500;
	font-size: 14px;
	white-space: nowrap;
	text-overflow: ellipsis;
	height: 32px;
  opacity: 0;
  // transform: scale(0);
	line-height: 32px;
	padding-right: 16px;
	padding-left: 16px;
  background-color: #424242;
  color: rgba(255,255,255,0.87);
  animation-fill-mode: both;
  animation-duration: 1s;
  animation-name: zoomIn;
  &.md-show {
    position: fixed;
    // transform: scale(1);
    opacity: .9;
  }
}

@keyframes zoomIn {
  from {
    opacity: 0;
    transform: scale3d(.3, .3, .3);
  }
  50% {
    opacity: 1;
  }
}

.opq0 {
  opacity: 0;
}
.file-input-wrapper {
  overflow: hidden;
  position: relative;
  cursor: pointer;
  z-index: 1;
  input[type=file], input[type=file]:focus, input[type=file]:hover {
    position: absolute;
    top: 0;
    left: 0;
    cursor: pointer;
    opacity: 0;
    filter: alpha(opacity=0);
    z-index: 99;
    outline: 0;
  }
}
.file-input-name {
  margin-left: 8px;
}

.input-append {
  display: flex;
	flex-direction: row-reverse;
	align-items: center;
	align-content: center;
	justify-content: flex-end;
	padding: 8px 0 0 0;
	flex: 1 1 0%;
  min-height: 50px;
  span.btn {
    margin: 0 8px 0 0;
  }
  input[type=text] {
    background-color: rgba(255,255,255,0.1);
    color: rgba(255,255,255,0.87)
  }
}

// Alternate buttons
@each $color, $value in $theme-colors {
  .btn-outline-#{$color} {
    @include button-outline-variant($value, #fff);
  }
}

//
// Base styles
//
.card {
  position: relative;
  display: flex;
  flex-direction: column;
  min-width: 0;
  word-wrap: break-word;
  background-color: $card-bg;
  background-clip: border-box;
  border: $card-border-width solid $card-border-color;
  @include border-radius($card-border-radius);
}
.card-body {
  flex: 1 1 auto;
  padding: $card-spacer-x;
}
.card-title {
  margin-bottom: $card-spacer-y;
}
.card-subtitle {
  margin-top: -($card-spacer-y / 2);
  margin-bottom: 0;
}
.card-text:last-child {
  margin-bottom: 0;
}
.card-link {
  &:hover {
    text-decoration: none;
  }
  + .card-link {
    margin-left: $card-spacer-x;
  }
}
.card {
  > .list-group:first-child {
    .list-group-item:first-child {
      @include border-top-radius($card-border-radius);
    }
  }
  > .list-group:last-child {
    .list-group-item:last-child {
      @include border-bottom-radius($card-border-radius);
    }
  }
}
//
// Optional textual caps
//
.card-header {
  padding: $card-spacer-y $card-spacer-x;
  margin-bottom: 0; // Removes the default margin-bottom of <hN>
  background-color: $card-cap-bg;
  border-bottom: $card-border-width solid $card-border-color;
  &:first-child {
    @include border-radius($card-inner-border-radius $card-inner-border-radius 0 0);
  }
}
.card-footer {
  padding: $card-spacer-y $card-spacer-x;
  background-color: $card-cap-bg;
  border-top: $card-border-width solid $card-border-color;
  &:last-child {
    @include border-radius(0 0 $card-inner-border-radius $card-inner-border-radius);
  }
}
//
// Header navs
//
.card-header-tabs {
  margin-right: -($card-spacer-x / 2);
  margin-bottom: -$card-spacer-y;
  margin-left: -($card-spacer-x / 2);
  border-bottom: 0;
}
.card-header-pills {
  margin-right: -($card-spacer-x / 2);
  margin-left: -($card-spacer-x / 2);
}
// Card image
.card-img-overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  padding: $card-img-overlay-padding;
}
.card-img {
  width: 100%; // Required because we use flexbox and this inherently applies align-self: stretch
  @include border-radius($card-inner-border-radius);
}
// Card image caps
.card-img-top {
  width: 100%; // Required because we use flexbox and this inherently applies align-self: stretch
  @include border-top-radius($card-inner-border-radius);
}
.card-img-bottom {
  width: 100%; // Required because we use flexbox and this inherently applies align-self: stretch
  @include border-bottom-radius($card-inner-border-radius);
}
// Card deck
@include media-breakpoint-up(sm) {
  .card-deck {
    display: flex;
    flex-flow: row wrap;
    margin-right: -$card-deck-margin;
    margin-left: -$card-deck-margin;
    .card {
      display: flex;
      flex: 1 0 0%;
      flex-direction: column;
      margin-right: $card-deck-margin;
      margin-left: $card-deck-margin;
    }
  }
}
//
// Card groups
//
@include media-breakpoint-up(sm) {
  .card-group {
    display: flex;
    flex-flow: row wrap;
    .card {
      flex: 1 0 0%;
      + .card {
        margin-left: 0;
        border-left: 0;
      }
      // Handle rounded corners
      @if $enable-rounded {
        &:first-child {
          @include border-right-radius(0);
          .card-img-top {
            border-top-right-radius: 0;
          }
          .card-img-bottom {
            border-bottom-right-radius: 0;
          }
        }
        &:last-child {
          @include border-left-radius(0);
          .card-img-top {
            border-top-left-radius: 0;
          }
          .card-img-bottom {
            border-bottom-left-radius: 0;
          }
        }
        &:not(:first-child):not(:last-child) {
          border-radius: 0;
          .card-img-top,
          .card-img-bottom {
            border-radius: 0;
          }
        }
      }
    }
  }
}
//
// Columns
//
.card-columns {
  .card {
    margin-bottom: $card-columns-margin;
  }
  @include media-breakpoint-up(sm) {
    column-count: $card-columns-count;
    column-gap: $card-columns-gap;
    .card {
      display: inline-block; // Don't let them vertically span multiple columns
      width: 100%; // Don't let their width change
    }
  }
}

.zcard {
	box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
	display: flex;
	flex-direction: column;
	justify-content: flex-end;
	padding: 0;
	box-sizing: border-box;
	border-radius: 2px;
	overflow: hidden;
  background-color: $panel-bg;
  color: $panel-primary-text;
}
.z-card-primary {
  padding: 16px;
  .z-card-title {
  	font-size: 2.0rem;
  	font-weight: 400;
  	letter-spacing: 0.04em;
  	line-height: 2.2rem;
  	text-decoration: inherit;
  	text-transform: inherit;
  	color: rgba($panel-primary-text, 0.87);
  	margin: 0;
  }
  + .z-card-content {
    margin-top: -8px;
  	padding-top: 0;
  }
}
.z-card-content {
  padding: 8px 16px;
	box-sizing: border-box;
	font-size: 1.4rem;
	font-weight: 400;
	letter-spacing: 0.04em;
	line-height: 2.0rem;
	text-decoration: inherit;
	text-transform: inherit;
	color: rgba($panel-primary-text, 0.87);
}
.z-card-actions {
	display: flex;
	padding: 8px 16px;
	box-sizing: border-box;
  .btn {
    margin: 0 8px 0 0;
    padding: 0 8px;
    font-size: 1.4rem;
    font-weight: 500;
    letter-spacing: 0.04em;
    line-height: 3.4rem;
    text-decoration: none;
    text-transform: uppercase;
    position: relative;
    min-width: 88px;
    height: 34px;
    outline: none;
    text-align: center;
    overflow: hidden;
    vertical-align: middle;
    &:before, &::before,
    &:after, &::after {
      background-color: rgba(0, 0, 0, 0.06);
    	position: absolute;
    	top: calc(50% - 100%);
    	left: calc(50% - 100%);
    	width: 200%;
    	height: 200%;
    	transition: opacity 250ms linear;
    	border-radius: 50%;
    	opacity: 0;
    	pointer-events: none;
    	content: "";
    }
    &:hover {
      &:before, &::before {
        transition-duration: 85ms;
        opacity: 0.6;
      }
    }
  }
}

.withripple {
  position: relative;
}
.ripple-container {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  width: 100%;
  height: 100%;
  overflow: hidden;
  border-radius: inherit;
  pointer-events: none;
}
.ripple {
  position: absolute;
  width: 20px;
  height: 20px;
  margin-left: -10px;
  margin-top: -10px;
  border-radius: 100%;
  background-color: #000; // fallback color
  background-color: rgba(0,0,0,0.05);
  transform: scale(1);
  transform-origin: 50%;
  opacity: 0;
  pointer-events: none;
}
.ripple.ripple-on {
  transition: opacity 0.15s ease-in 0s, transform 0.5s cubic-bezier(0.4, 0, 0.2, 1) 0.1s;
  opacity: 0.1;
}
.ripple.ripple-out {
  transition: opacity 0.1s linear 0s !important;
  opacity: 0;
}

.error_messages, #error_explanation {
  width: 100%;
  display: flex;
  flex-direction: column;
  border: 0 solid rgba(0,0,0,0);//$brand-danger;
  padding: 0px;
  padding-bottom: 12px;
  margin-bottom: 20px;
  background-color: lighten($gray-light, 5%);
  font-size: 12px;
  box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.3), 0px 2px 2px 0px rgba(0, 0, 0, 0.19), 0px 3px 1px -2px rgba(0, 0, 0, 0.12);
  h2 {
    text-align: left;
    font-weight: 500;
    padding: 5px 10px;
    font-size: 1.40rem;
    letter-spacing: 0.010em;
    margin: 0 0 12px 0;
    background-color: $brand-danger;
    color: #fafafa;
  }
  ul { margin-bottom: 0; }
}
